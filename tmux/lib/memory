# Adapted from byobu

__memory() {
    local free="" total="" buffers="" cached=""
    local kb_main_used=0 buffers_plus_cached=0 fo_buffers=0 fo_cached=0
    while read tok val unit; do
        case "$tok" in
            MemTotal:) total=${val};;
            MemFree:) free=${val};;
            Buffers:) buffers=${val};;
            Cached:) cached=${val};;
        esac
        [ -n "${free}" -a -n "${total}" -a -n "${buffers}" -a -n "${cached}" ] && break;
    done < /proc/meminfo

    kb_main_used=$(( $total - $free ))
    buffers_plus_cached=$(( $buffers + $cached ))
    # "free output" buffers and cache (output from 'free')
    fo_buffers=$(( $kb_main_used - $buffers_plus_cached ))
    usage=$(( 100 * ${fo_buffers} / ${total} ))

    if (( $usage > 90 )); then
        color="#[fg=#ff5f87,bg=#5f8700,bold]"
    else
        color="#[fg=brightwhite,bg=#5f8700,bold]"
    fi

    printf "%2s%s#[default]#[fg=brightwhite,bg=#5f8700]%%#[default] " $color $usage
}

# vim: filetype=zsh
