#!/usr/bin/env zsh
# Takes some code from byobu and is therefore released under the GPLv3

setopt sh_word_split

ITEMS="cputemp battery"

TMUX_LIBDIR=$HOME/.etc/tmux/lib

if [[ -r $HOME/.config/etc/tmux-statusrc ]]; then
    . $HOME/.config/etc/tmux-statusrc
fi

ismac() {
    [[ $OSTYPE == darwin* ]] && return 0
    return 1
}

status_freq() {
    case "$1" in
        battery) echo 61 ;;
        cputemp) echo 19 ;;
        rhino)   echo 31 ;;
    esac
}

get_status() {
    function="$1"

    local cachepath="$TMUX_CACHE/status/$function"
    local lastpath="$TMUX_CACHE/.last/$function"
    local lastrun=0
    [[ -r "$lastpath" ]] && read lastrun < "$lastpath"

    freq=$(status_freq "$function")
    local expiry=$(($lastrun+$freq))

    . $TMUX_LIBDIR/$function

    # Update cache now, if necessary
    if (( $NOW >= $expiry )) || (( $lastrun == 0 )); then
        "__$function" > "$cachepath".new
    fi
    # Check if we have data in the cache
    if [[ -s "$cachepath".new ]]; then
        # Looks like we have an updated cache, use it
        mv -f "$cachepath".new "$cachepath"
        printf "%s" "$NOW" > "$lastpath"
        IFS= read line < "$cachepath"; printf "%s" "$line"
    elif [[ -s "$cachepath" ]]; then
        # New cache is empty, but we have data from our last run, use it
        IFS= read line < "$cachepath"; printf "%s" "$line"
    fi
}

NOW=$(print -P "%D{%s}")

for item in $ITEMS; do
    get_status "$item"
done
