## keybindings (run 'bindkeys' for details, more details via man zshzle)

# also do history expansion on space
bindkey ' ' magic-space

bindkey '^p' up-line-or-search
bindkey '^n' down-line-or-search
bindkey '^r' history-incremental-pattern-search-backward
bindkey '^s' history-incremental-pattern-search-forward

# turn current line into comment and commit
bindkey '^[#' pound-insert

# define word separators (for stuff like backward-word, forward-word, backward-kill-word,..)
#  WORDCHARS='*?_-.[]~=/&;!#$%^(){}<>' # the default
#  WORDCHARS=.
#  WORDCHARS='*?_[]~=&;!#$%^(){}'
#  WORDCHARS='${WORDCHARS:s@/@}'

# only slash should be considered as a word separator:
slash-backward-kill-word() {
    local WORDCHARS="${WORDCHARS:s@/@}"
    # zle backward-word
    zle backward-kill-word
}
zle -N slash-backward-kill-word
# press esc-w (meta-w) to delete a word until its last '/'
# (not the same as ctrl-w!)
bindkey '\ew' slash-backward-kill-word

# we don't want to quote/espace URLs on our own...
autoload -U url-quote-magic
zle -N self-insert url-quote-magic

autoload -U insert-files
zle -N insert-files
bindkey "^Xf" insert-files

# press esc-e for editing command line in $EDITOR or $VISUAL
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\ee' edit-command-line

# insert current date
_insert_datestamp() { LBUFFER+=${(%):-'%D{%Y-%m-%d}'}; }
zle -N insert-datestamp _insert_datestamp
bindkey '\et' insert-datestamp

# press esc-m for inserting last typed word again (thanks to caphuso!)
insert-last-typed-word() { zle insert-last-word -- 0 -1 }
zle -N insert-last-typed-word
bindkey "\em" insert-last-typed-word

# run command line as user root via sudo:
_sudo-command-line() {
  [[ $BUFFER != sudo\ * ]] && LBUFFER="sudo $LBUFFER"
}
zle -N sudo-command-line _sudo-command-line
bindkey "^Xs" sudo-command-line

autoload insert-unicode-char
zle -N insert-unicode-char
bindkey '^Xi' insert-unicode-char

# jump behind the first word on the cmdline to add options
function _jump_after_first_word() {
    local words
    words=(${(z)BUFFER})

    if (( ${#words} <= 1 )) ; then
        CURSOR=${#BUFFER}
    else
        CURSOR=${#${words[1]}}
    fi
}
zle -N _jump_after_first_word
bindkey '^x1' _jump_after_first_word

# vim: filetype=zsh
