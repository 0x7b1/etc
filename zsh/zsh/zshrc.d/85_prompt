__prompt_jobs() {
    echo "%(1j.${pcol[bold]}${pcol[cyan]}%j${pcol[reset]} .)"
}

typeset -ghi __next_command __last_command
__inc_command() { (( __next_command++ )) }
add-zsh-hook preexec __inc_command
__prompt_exitcode() {
    if (( __next_command == __last_command )); then
        echo ""
    else
        # This only seems to have effect locally...
        (( __last_command = __next_command ))
        echo "%(0?..${pcol[bold]}${pcol[red]}%?${pcol[reset]} )"
    fi
}

# test if we have writing permission for the current directory
__prompt_wperm() {
    if ! [[ -w "$PWD" ]]; then
        echo "${pcol[bold]}${pcol[red]}!${pcol[reset]}"
    fi
}

__prompt_logo() {
    if [[ -z "$SSH_CONNECTION" ]]; then
        return
    fi
    if [[ -n "$_prompt_logo" ]]; then
        echo "$_prompt_logo • "
        return
    fi
    _prompt_logo="?"
    if [[ -r /etc/issue ]]; then
        DISTRO=$(grep -m1 "^[a-zA-Z]" /etc/issue)
        case "${DISTRO:l}" in
            *debian*)
                _prompt_logo="${pcol[161]}@${pcol[reset]}"
                ;;
            *ubuntu*)
                # _prompt_logo="${pcol[160]}\\${pcol[208]}o${pcol[yellow]}/${pcol[reset]}"
                _prompt_logo="${pcol[magenta]}u${pcol[reset]}"
                ;;
            *arch*)
                _prompt_logo="${pcol[32]}A${pcol[reset]}"
                ;;
        esac
    elif ismac; then
        _prompt_logo="${pcol[246]}X${pcol[reset]}"
    elif uname -s | grep -i netbsd >/dev/null; then
        _prompt_logo="${pcol[244]}\\${pcol[202]}~${pcol[reset]}"
    fi
    echo "$_prompt_logo • "
}

__prompt_orighome() {
    if [[ $HOME != $ORIGHOME ]]; then
        print "${pcol[246]}${PWD/$ORIGHOME/\~}${pcol[reset]}"
    fi
}

__prompt_jdk() {
    [[ -z $JAVA_HOME ]] && return
    local jdk=$(basename $JAVA_HOME)
    if [[ $jdk != jdk-default ]]; then
        print "${pcol[cyan]}$jdk${pcol[reset]} "
    fi
}

__prompt_ant() {
    [[ -z $ANT_HOME ]] && return
    local ant=$(basename $ANT_HOME)
    if [[ $ant != ant-default ]]; then
        print "${pcol[cyan]}$ant${pcol[reset]} "
    fi
}

__prompt_local() {
    (( $#_prompt_local == 0 )) && return
    print " • ${(j: • :)_prompt_local}"
}

_prompt_logo=""
_prompt_path="${pcol[green]}%~${pcol[reset]}"
_prompt_vcs_info=""
typeset -ga _prompt_local

__prompt_reset_vars() {
    _prompt_local=()
}
add-zsh-hook precmd __prompt_reset_vars

PS1='
$(__prompt_logo)${pcol[167]}%n${pcol[reset]} @ ${pcol[220]}%m${pcol[reset]} ${_prompt_vcs_icon} ${_prompt_path}$(__prompt_wperm)${_prompt_vcs_info}$(__prompt_local)
%(2L.${pcol[bold]}%L${pcol[reset]} .)$(__prompt_jdk)$(__prompt_ant)$(__prompt_exitcode)$(__prompt_jobs)%(!.#.$) '

RPS1='$(__prompt_orighome)'

PS2="${pcol[bold]}%_${pcol[reset]} %(!.#.>) "
PS3='?# '         # selection prompt used within a select loop.
PS4='+%N:%i:%_> ' # the execution trace prompt (setopt xtrace). default: '+%N:%i>'

# vim: filetype=zsh
