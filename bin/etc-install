#!/bin/bash

set -e


OSNAME=$(uname -s)
HOST=${HOST:-$(hostname)}
HOST=${HOST/.*}
DOMAIN=${DOMAIN:-$(hostname -d 2>&-)}
if [[ "$DOMAIN" == "" || "$DOMAIN" == "localdomain" || "$DOMAIN" == "(none)" ]]; then
    DOMAIN=$(grep "^domain " /etc/resolv.conf | cut -d' ' -f2)
fi
export OSNAME HOST DOMAIN


info() {
    # echo -e "\033[32m$1\033[0m"
    echo -e "$1"
}
warn() {
    echo -e "\033[33m$1\033[0m"
}
error() {
    echo -e "\033[31m$1\033[0m"
}

merge() {
    local confbase=.etc/$1
    shift

    if [[ $# -ge 1 ]]; then
        local "$@"
    fi
    local target=${target:-.$(basename "$confbase")}
    local comment=${comment:-#}

    info "Merging $target"

    if [[ -f $target ]] && ! head -1 $target | grep -q "\*\*\* GENERATED FILE - DO NOT EDIT \*\*\*"; then
        error "$target is not a generated file!"
        return
    fi

    rm -f $target

    echo "$comment *** GENERATED FILE - DO NOT EDIT ***" > $target
    if [[ -f ${confbase} ]]; then
        echo "$comment [$(readlink -f $confbase)]" >> $target
        cat $confbase >> $target
    fi

    local localfile=$HOME/.local/etc/$(basename "$confbase")

    if [[ -d ${confbase}.d ]]; then
        [[ -f $localfile ]] && ln -s $localfile ${confbase}.d/50_local || :

        for part in ${confbase}.d/??_*; do
            if grep -q '^# --- CUT HERE ---$' $part; then
                csplit -s $part '/^# --- CUT HERE ---$/+1'
                if bash xx00; then
                    echo -e "\n$comment [$(readlink -f $part)]" >> $target
                    cat xx01 >> $target
                fi
                rm xx0[01]
            else
                echo -e "\n$comment [$(readlink -f $part)]" >> $target
                cat $part >> $target
            fi
        done

        [[ -f ${confbase}.d/50_local ]] && rm ${confbase}.d/50_local || :
    else
        if [[ -f $localfile ]]; then
            echo -e "\n$comment [$localfile]" >> $target
            cat $localfile >> $target
        fi
    fi
}

xlink() {
    local conffile=.etc/$1
    shift

    if [[ $# -ge 1 ]]; then
        local "$@"
    fi
    local target=${target:-.$(basename "$conffile")}

    info "Linking $target"

    if [[ -a "$target" && ! -L "$target" ]]; then
        error "$target is not a symlink!"
        return
    fi

    rm -f "$target"
    local dir=$(dirname "$target")
    if ! [[ -d "$dir" ]]; then
        mkdir -p "$dir"
    fi
    ln -s "$HOME/$conffile" "$target"
}

OLDPWD=$PWD
cd $HOME

mkdir -p $HOME/.local/etc
mkdir -p $HOME/.var/{lib,log}

ln -sf $HOME/.etc/.githooks/* .etc/.git/hooks

xlink Rprofile
merge ackrc
xlink ant/ant.conf target=.ant/ant.conf
xlink aptitude
xlink astylerc
xlink awesome target=.config/awesome
xlink bibtoolrsc
xlink colorgccrc
xlink colordiffrc
xlink ctags
xlink gdbinit
xlink gtk/gtkrc-2.0
xlink gtk/gtk-3.0/settings.ini target=.config/gtk-3.0/settings.ini
xlink indent.pro
xlink inputrc
xlink irbrc
xlink latexmkrc
#xlink mailcap
xlink mercurial/hgrc
xlink moc
xlink ranger target=.config/ranger
xlink redshift.conf target=.config/redshift.conf
xlink screen/screenrc
xlink slrn/slrnrc
merge sshconfig target=.ssh/config
xlink taskrc
xlink urxvt
xlink weechat
xlink zathurarc target=.config/zathura/zathurarc
xlink zsh/zshenv

xlink bash/bashrc
xlink bash/bash_profile
xlink bash/bash_logout

xlink emacs/emacs
xlink emacs/emacs.d

xlink git/gitconfig target=.config/git/config
merge git/gitignore target=.config/git/ignore
ln -sf $HOME/.config/git/ignore $HOME/.agignore

xlink tmux/tmux.conf
info "Installing tmux plugins"
if ! [[ -d $HOME/.var/lib/tmux/plugins/tpm/.git ]]; then
    git clone https://github.com/tmux-plugins/tpm.git $HOME/.var/lib/tmux/plugins/tpm
fi
if command -v tmux >/dev/null; then
    if tmux server-info &>/dev/null; then
        $HOME/.var/lib/tmux/plugins/tpm/scripts/install_plugins.sh
    else
        tmux start-server
        tmux new-session -d
        $HOME/.var/lib/tmux/plugins/tpm/scripts/install_plugins.sh
        tmux kill-server
    fi
fi

xlink mail/dovecot.sieve target=.config/dovecot.sieve
xlink mail/goobookrc
xlink mail/lbdb
xlink mail/msmtprc
xlink mail/offlineimaprc
xlink mail/t-prot target=.config/t-prot

xlink mutt/muttrc
xlink mutt/mutt

xlink vim/vimrc
xlink vim/gvimrc
xlink vim/vim
if ! [[ -d $HOME/.var/lib/vim/bundles/ ]]; then
    git clone https://github.com/Shougo/neobundle.vim $HOME/.var/lib/vim/bundles/neobundle.vim
fi

crontab $HOME/.etc/crontab/crontab

xlink less/lessfilter
merge less/lesskey target=/tmp/lesskey$$
lesskey /tmp/lesskey$$
rm /tmp/lesskey$$


if command -v X >/dev/null; then
    xlink xorg/fontconfig target=.config/fontconfig
    xlink xorg/XCompose
    #xlink xorg/Xresources
    #xlink xorg/xinitrc
    #xlink xorg/xinput.d
    #xlink xorg/xinputrc
    #xlink xorg/xsession
    xlink xorg/xsessionrc
    merge xorg/Xmodmap comment=!
    xmodmap $HOME/.Xmodmap

    FONTDIR=$HOME/.local/share/fonts
    mkdir -p $FONTDIR
    for fontf in .etc/xorg/fonts/*.bdf; do
        font=$(basename ${fontf})
        font=${font%.bdf}
        info "Installing font ${font}"
        bdftopcf -o $FONTDIR/${font}.pcf ${fontf}
        gzip -f $FONTDIR/${font}.pcf
    done
    cd $FONTDIR
    mkfontdir
    cd $HOME
    xset -fp $FONTDIR 2> /dev/null
    xset +fp $FONTDIR
fi

if command -v python >/dev/null; then
    cd .etc/python/lib/desert
    info "Installing python lib: desert"
    python setup.py install --user >/dev/null
    python3 setup.py install --user >/dev/null
    cd $HOME
fi

for tinfof in .etc/terminfo/*; do
    tinfo=$(basename ${tinfof})
    tinfo=${tinfo%.terminfo}
    info "Compiling terminfo ${tinfo}"
    tic $tinfof

    # also install termcap data if the shell is linked against it
    if ldd $(which bash) | grep -q libtermcap; then
        info "termcap in use, appending ${tinfo} to ~/.termcap"
        if [[ -f .termcap ]] && ! grep -qE "^${tinfo}\|" .termcap; then
            tic -C -T ${tinfof} >> .termcap
        else
            tic -C -T ${tinfof} > .termcap
        fi
    fi
done

cd $OLDPWD
