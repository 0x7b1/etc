PATH=/bin:/usr/bin:/usr/local/bin:$HOME/bin
SHELL=/bin/sh
VERBOSE=off
COMSAT=off
MAILDIR=$HOME/Maildir
DEFAULT=$HOME/Maildir/
LOGFILE=$HOME/.var/log/procmail/procmail.log

# "yes" if ml mail should be marked as read
READ=$1

# Insert line count for imap/maildir
:0Bfh
* H ?? ! ^Lines:
* -1^0
*  1^1   ^.*$
| formail -A "Lines: $="

# Correct wrong sig-dashes, ie add a space for lines with only "--" in them:
# from: ^--$
# to:   ^-- $
# :0 fBw
# * ^--$
# | sed -e 's/^--$/-- /'

# preconverts all plain-text mail arriving in certain encoded
# MIME formats into a more compact 8-bit format which can be
# used and displayed more easily by most programs.
# NOTE: mimencode from the metamail package has to be installed
# :0
# * ^Content-Type: *text/plain
# {
#     :0 fbw
#     * ^Content-Transfer-Encoding: *quoted-printable
#     | mimencode -u -q

#     :0 afhw
#     | formail -I "Content-Transfer-Encoding: 8bit"

#     :0 fbw
#     * ^Content-Transfer-Encoding: *base64
#     | mimencode -u -b

#     :0 afhw
#     | formail -I "Content-Transfer-Encoding: 8bit"
# }

# Convert old-style PGP messages to MIME
:0
* !^Content-Type: message/
* !^Content-Type: multipart/
* !^Content-Type: application/pgp
{
    :0 fBw
    * ^-----BEGIN PGP MESSAGE-----
    * ^-----END PGP MESSAGE-----
    | formail \
        -i "Content-Type: application/pgp; format=text; x-action=encrypt"

    :0 fBw
    * ^-----BEGIN PGP SIGNED MESSAGE-----
    * ^-----BEGIN PGP SIGNATURE-----
    * ^-----END PGP SIGNATURE-----
    | formail \
        -i "Content-Type: application/pgp; format=text; x-action=sign"

    :0 fBw
    * ^-----BEGIN PGP PUBLIC KEY BLOCK-----
    * ^-----END PGP PUBLIC KEY BLOCK-----
    | formail \
        -i "Content-Type: application/pgp-keys; format=text;"
}

# Mailing lists

# Assign maximum score to matches so that other conditions get skipped.
# http://www.perlcode.org/tutorials/procmail/proctut/proctip2.pod
# Can't use variable for score as that would cause problems with shell quoting
# the regex
:0
* 9876543210^0 ^X-Mailing-List:[	 ]<\/[^ >`']+
* 9876543210^0 ^X-Mailing-List:[	 ]\/[^ `']+
* 9876543210^0 ^X-BeenThere:[	 ]\/[^ `']+
* 9876543210^0 ^Sender:[	 ]owner-\/[^ `']+
* 9876543210^0 ^Delivered-To:[	 ]mailing list \/[^ `']+
* 9876543210^0 ^X-Loop:[	 ]\/[^ `']+
* 9876543210^0 ^Mailing-List:[	 ]list[	 ]\/[^ `';]+
* 9876543210^0 ^List-post:[	 ]<mailto:\/[^ >`']+
{
    foldername=.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

    # Make sure the directory exists so writing temp files will work
    :0cw
    *
    | mkdir -p $MAILDIR/$foldername

    :0
    * READ ?? yes
    {
        SWITCHRC=$HOME/.etc/procmail/markasread
    }

    # http://freesoftware.zona-m.net/how-ignore-uninteresting-threads-in-mailing-lists/
    # simple recipe to ignore threads based on prior cache of threads to ignore.
    # 20061230, SBS

    # get In-Reply-To messageid, check to see if it is in the ignore cache or
    # in the mua_ignore cache. formail stores cache with ascii-z terminations,
    # but grep will still match the binary file.
    # if we have a match in the MUA id file or current cache, ADD the
    # messageid of THIS message to the cache, so that replies to it will also
    # be ignored.

    # ensure these are blank, not set to something you might have used them
    # for previously
    REFS=
    REFSNL=

    :0
    * In-Reply-To:.*\/[^	 ].*
    {
        # Assign the results to REFS
        REFS=${MATCH}
    }

    :0
    * ^References:.*\/[^	 ].*
    {
        # Append the results to REFS
        # no consideration as to whether REFS was null or not.
        REFS="${REFS} ${MATCH}"
    }

    # by doing this ONLY if REFS contains non-whitespace, we spare ourselves
    # the overhead of the pipe chain invocation when it isn't needed (i.e.
    # messages with no references).  Arguably, REFS shouldn't be set at all if
    # the headers are empty, but this check is cheap to perform
    :0
    * REFS ?? [^	 ]
    {
        REFSNL=`echo "$REFS" | tr -s "  " "\n\n" | \
                sed -n -r -e '/^<[^>]+>$/ p'`
    }

    killedthreads=$HOME/.cache/killedthreads
    :0hc:$killedthreads$LOCKEXT
    * REFSNL ?? .
    * ? grep -qF "$REFSNL" $killedthreads
    | formail -D 500000 $killedthreads

    # if the preceding conditions matched, then mark this message as read.
    :0A
    {
        SWITCHRC=$HOME/.etc/procmail/markasread
    }

    :0:
    $foldername
}

# Rest

:0fw: spamassassin.lock
* < 256000
* ! ^X-Spam-Flag: YES
| spamc

:0
* ^X-Spam-Level: \*\*\*\*\*\*\*\*\*\*
/dev/null

:0
* ^X-Spam-Status: Yes
{
    foldername=.Spam/
    SWITCHRC=$HOME/.etc/procmail/markasread
}

:0:
$DEFAULT

# vim: filetype=procmail
