PATH=/bin:/usr/bin:/usr/local/bin:$HOME/bin
VERBOSE=off
MAILDIR=$HOME/Maildir
DEFAULT=$HOME/Maildir/
LOGFILE=$MAILDIR/procmail_log

:0fw
* < 256000
* ! ^X-Spam-Flag: YES
| spamc

:0
* ^X-Spam-Level: \*\*\*\*\*\*\*\*\*\*
/dev/null

:0
* ^X-Spam-Status: Yes
.spam/

#:0 Whc: msgid.lock
#| formail -D 16384 msgid.cache
#:0 a:
#misc/duplicates

# Work around procmail bug: any output on stderr will cause the "F" in "From"
# to be dropped.  This will re-add it.
:0 H
* ! ^From[ ]
* ^rom[ ]
{
   LOG="*** Dropped F off From_ header! Fixing up. "

  :0 fhw
  | sed -e 's/^rom /From /'
}

# Add Content-Type header if it is missing
:0 H
* ! ^Content-Type:
{
   LOG="*** Added Content-Type: header"

  :0 fhw
  | formail -a "Content-Type: text/plain; charset=iso-8859-1"
}

# Insert line count for imap/maildir
:0Bfh
* H ?? ! ^Lines:
* -1^0
*  1^1   ^.*$
| formail -A "Lines: $="

# Correct wrong sig-dashes, ie add a space for lines with only "--" in them:
# from: ^--$
# to:   ^-- $
:0 fBw
* ^--$
| sed -e 's/^--$/-- /'

# preconverts all plain-text mail arriving in certain encoded
# MIME formats into a more compact 8-bit format which can be
# used and displayed more easily by most programs.
# NOTE: mimencode from the metamail package has to be installed
:0
* ^Content-Type: *text/plain
{
    :0 fbw
    * ^Content-Transfer-Encoding: *quoted-printable
    | mimencode -u -q

    :0 afhw
    | formail -I "Content-Transfer-Encoding: 8bit"

    :0 fbw
    * ^Content-Transfer-Encoding: *base64
    | mimencode -u -b

    :0 afhw
    | formail -I "Content-Transfer-Encoding: 8bit"
}

# Convert old-style PGP messages to MIME
:0
* !^Content-Type: message/
* !^Content-Type: multipart/
* !^Content-Type: application/pgp
{
    :0 fBw
    * ^-----BEGIN PGP MESSAGE-----
    * ^-----END PGP MESSAGE-----
    | formail \
        -i "Content-Type: application/pgp; format=text; x-action=encrypt"

    :0 fBw
    * ^-----BEGIN PGP SIGNED MESSAGE-----
    * ^-----BEGIN PGP SIGNATURE-----
    * ^-----END PGP SIGNATURE-----
    | formail \
        -i "Content-Type: application/pgp; format=text; x-action=sign"

    :0 fBw
    * ^-----BEGIN PGP PUBLIC KEY BLOCK-----
    * ^-----END PGP PUBLIC KEY BLOCK-----
    | formail \
        -i "Content-Type: application/pgp-keys; format=text;"
}

# Mailinglisten

:0
* ^X-Mailing-List:[	 ]<\/[^ >`']+
.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

:0
* ^X-Mailing-List:[	 ]\/[^ `']+
.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

:0
* ^X-BeenThere:[	 ]\/[^ `']+
.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

:0
* ^Sender:[	 ]owner-\/[^ `']+
.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

:0
* ^Delivered-To:[	 ]mailing list \/[^ `']+
.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

:0
* ^X-Loop:[	 ]\/[^ `']+
.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

:0
* ^Mailing-List:[	 ]list[	 ]\/[^ `';]+
.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

:0
* ^List-post:[	 ]<mailto:\/[^ >`']+
.lists.`echo $MATCH | sed -e 's/[\/]/_/g' | tr A-Z a-z | sed -e 's/\./_/g'`/

# Rest

:0
* ^From:.*mailagent.*wissenschaft
.news.bdw/

:0
* ^From:.*domainbox
.DomainBOX/

#:0
#* ^To:.*members@gmx\.net
#.GMX/

#:0
#* ^Delivered-To:.*GMX.delivery.to
#* ^To:.*jan\.larres@gmx\.net
#.GMX-JL/

#:0
#* ^Delivered-To:.*GMX.delivery.to
#* ^To:.*majutsushi@gmx\.net
#.GMX-M/

#:0
#* ^Delivered-To:.*GMX.delivery.to
#* ! ^To:.*(jan\.larres@gmx\.net|majutsushi@gmx\.net)
#.GMX-Bulk/

:0
* ^To:.*shopping@majutsushi\.net
.shopping/

:0
$DEFAULT

# vim:noexpandtab

