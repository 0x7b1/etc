[user]
	name = Jan Larres
	email = jan@majutsushi.net

[core]
	fsyncobjectfiles = false
	autocrlf = input
	pager = less -F
	whitespace = blank-at-eol,space-before-tab,tab-in-indent,blank-at-eof,cr-at-eol

[alias]
	st = status
	ci = commit
	co = checkout
	br = branch

	ls  = log --stat
	lg  = log --graph --oneline --decorate
	lga = log --graph --oneline --decorate --all
	ll  = log --graph --pretty=tformat:\"%C(auto,yellow)%h %C(auto,blue)%ad %C(auto,green)%<(15,trunc)%an %C(auto)%d %Creset%s\"
	lla = log --graph --pretty=tformat:\"%C(auto,yellow)%h %C(auto,blue)%ad %C(auto,green)%<(15,trunc)%an %C(auto)%d %Creset%s\" --all
	log-refs = log --all --graph --decorate --oneline --simplify-by-decoration --no-merges
	show-upstream-branch = rev-parse --abbrev-ref '@{upstream}'
	show-push-branch = rev-parse --abbrev-ref '@{push}'
	in = "!if git-config --get-regexp svn-remote >/dev/null 2>&1; then if ! git ll ..trunk 2>/dev/null; then git ll ..git-svn; fi; else git ll ..@{upstream}; fi"
	new = "!f() { git ll ${1:-HEAD}@{1}..${1:-HEAD}@{0}; }; f"
	out = "!if git-config --get-regexp svn-remote >/dev/null 2>&1; then if ! git ll trunk.. 2>/dev/null; then git ll git-svn..; fi; else git ll @{push}..; fi"

	svnl = svn log --oneline --show-commit
	svn-show = "!f() { git show $(git svn find-rev $1); }; f"
	svn-co = "!f() { git checkout $(git svn find-rev $1); }; f"

	d  = diff -B -C -b
	sd = diff -B -C -b --staged
	wd = diff --color-words -B -C -b
	icdiff = "!f() { git difftool --no-prompt --extcmd icdiff \"$@\" | less -R; }; f"
	patch = --no-pager diff --no-color
	ws = show --color-words
	branch-diff = !git diff $(git merge-base HEAD master) $1
	bclean = "!f() { git branch --merged ${1:-master} | grep -v " ${1:-master}$" | xargs -r git branch -d; }; f"

	up = !git pull && git ll HEAD@{1}..
	reup = !git pull --rebase && git diff --stat HEAD@{1}.. && git ll HEAD@{1}..

	spull = "!f() { git pull \"$@\" && git submodule sync --recursive && git submodule update --init --recursive; }; f"
	spush = push --recurse-submodules=on-demand

	assume   = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed  = "!git ls-files -v | grep ^h | cut -c 3-"
	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"

	undo-commit = reset --soft HEAD^
	; from http://www.die-welt.net/2011/12/git-rocks-even-when-it-sucks/
	ls-big-files = "!for commit in $(git log --all --pretty=tformat:%H); do git ls-tree -r -l $commit; done |awk '{print $4 \" \" $5}' |sort -nur | head -n 10"
	; from https://gist.github.com/492227
	lost = "!git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %C(blue)%ad%Creset %C(green)%<(15,trunc)%an%Creset %s' --stdin | awk '/^SHA1/ {sub(\"SHA1: \", \"\"); print}'"

[color]
	ui = auto

[color "status"]
	; header = white
	added = green
	changed = red
	untracked = cyan
	branch = yellow
	nobranch = red
	unmerged = red bold

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	func = cyan
	old  = red
	new  = green
	oldMoved = 220
	oldMovedAlternative = 208
	newMoved = 45
	newMovedAlternative = 51

[status]
	submoduleSummary = true

[pager]
	diff = diff-so-fancy | less -F
	log = diff-so-fancy | less -F
	show = diff-so-fancy | less -F

[diff]
	tool = vimdiff
	algorithm = histogram
	submodule = log
	; noprefix = true
	renames = true
	indentHeuristic = true
	; mnemonicPrefix = true
	colorMoved = zebra
	colorMovedWS = ignore-all-space

[branch]
	autosetuprebase = always

[pull]
	rebase = merges

[push]
	default = simple
	recurseSubmodules = on-demand

[fetch]
	recurseSubmodules = on-demand
	prune = true

[tag]
	sort = version:refname

[log]
	date = format-local:"%Y-%m-%d %H:%M"
	follow = true
	decorate = short

[mergetool "gvimdiff3"]
	cmd = gvim -f -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
[mergetool "vimdiff3"]
	cmd = vim -f -d -c \"wincmd J\" \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
[mergetool "fugitive"]
	cmd = vim -f -c \"Gdiff\" \"$MERGED\"
[mergetool "imediff"]
	cmd = imediff -o \"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
[mergetool "splice"]
	cmd = "vim -f $BASE $LOCAL $REMOTE $MERGED --cmd 'autocmd VimEnter * SpliceInit'"
	trustExitCode = true

[merge]
	tool = splice
	conflictstyle = diff3
	ff = false

[rebase]
	autoStash = true

[rerere]
	enabled = true
	autoupdate = true

[stash]
	showPatch = true
	showStat = true

[svn]
	rmdir = true

[web]
	browser = firefox

[instaweb]
	httpd = webrick

[gui]
	fontdiff = -family terminus -size 9 -weight normal -slant roman -underline 0 -overstrike 0

[url "ssh://[login]@git.gnome.org/git/"]
	insteadof = gnome:

[include]
	path = ~/.local/etc/gitconfig

# vim: filetype=gitconfig noexpandtab sw=8 sts=8
